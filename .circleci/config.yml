version: 2.1
aliases:
  - &release
    name: Release
    command: |
      if [ "$(git log -n 1 --pretty="%an")" == "Renovate Bot" ]
      then
        echo "Skipping release"
      else
        echo "Start release"
        git config --global user.email "circleci@entur.no"
        git config --global user.name "circleci"
        git checkout master
        git pull --no-edit
        git checkout develop
        mvn gitflow:release-start gitflow:release-finish -Prelease -DpostReleaseGoals=deploy -DargLine=-Prelease -B
        git checkout master
        git pull --no-edit
        mvn deploy -DskipTests -Pentur-maven-central-local
      fi

  - &import_gpg_key
    name: Configure GPG private key for signing project artifacts in OSS Sonatype
    command: |
      echo $SONATYPE_GPG_KEY_BASE64 | base64 --decode | gpg --batch --no-tty --import --yes


  - &maven-settings-file
      "\"<settings xsi:schemaLocation='http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd' xmlns='http://maven.apache.org/SETTINGS/1.1.0'
              xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'>
            <servers>
            <server>
                   <username>$SONATYPE_USERNAME</username>
                   <password>$SONATYPE_PASSWORD</password>
                   <id>ossrh</id>
                 </server>
              <server>
                <username>$ARTIFACTORY_USER</username>
                <password>$ARTIFACTORY_PASSWORD</password>
                <id>central</id>
              </server>
              <server>
                <username>$ARTIFACTORY_USER</username>
                <password>$ARTIFACTORY_PASSWORD</password>
                <id>snapshots</id>
              </server>
              <server>
                <username>$ARTIFACTORY_USER</username>
                <password>$ARTIFACTORY_PASSWORD</password>
                <id>entur-maven-central-local</id>
                </server>
            </servers>
            <profiles>
        <profile>
          <repositories>
            <repository>
              <snapshots>
                <enabled>false</enabled>
              </snapshots>
              <id>central</id>
              <name>entur-team-kontobasert-billettering-release</name>
              <url>https://entur2.jfrog.io/entur2/entur-team-kontobasert-billettering-release</url>
            </repository>
            <repository>
              <snapshots />
              <id>snapshots</id>
              <name>entur-team-kontobasert-billettering-snapshot</name>
              <url>https://entur2.jfrog.io/entur2/entur-team-kontobasert-billettering-snapshot</url>
            </repository>
          </repositories>
          <pluginRepositories>
            <pluginRepository>
              <snapshots>
                <enabled>false</enabled>
              </snapshots>
              <id>central</id>
              <name>entur-team-kontobasert-billettering-release</name>
              <url>https://entur2.jfrog.io/entur2/entur-team-kontobasert-billettering-release</url>
            </pluginRepository>
            <pluginRepository>
              <snapshots />
              <id>snapshots</id>
              <name>entur-team-kontobasert-billettering-snapshot</name>
              <url>https://entur2.jfrog.io/entur2/entur-team-kontobasert-billettering-snapshot</url>
            </pluginRepository>
          </pluginRepositories>
          <id>artifactory</id>
        </profile>
            </profiles>
            <activeProfiles>
              <activeProfile>artifactory</activeProfile>
            </activeProfiles>
          </settings>\""

  - &java-container-config
    docker:
      - image: circleci/openjdk:11-jdk
        auth:
          username: $DOCKERHUB_LOGIN
          password: $DOCKERHUB_PASSWORD

  - &sonar-scan
    name: Sonar
    command: |
      mvn sonar:sonar \
        -Dsonar.projectKey=entur_${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.organization=enturas-github \
        -Dsonar.projectName=${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${ENTUR_SONAR_PASSWORD}

commands:
  generate-maven-settings-file:
    parameters:
      settings-file:
        type: string
    steps:
      - run:
          name: Generate Maven Settings File
          command: |
            mkdir -p ~/.m2
            echo -e << parameters.settings-file >> > ~/.m2/settings.xml

jobs:
  test:
    <<: *java-container-config
    environment:
      MAVEN_OPTS: -Xmx1G -Xms128m
    steps:
      - checkout
      - generate-maven-settings-file:
          settings-file: *maven-settings-file
      - run: mvn verify
  release:
    <<: *java-container-config
    environment:
      MAVEN_OPTS: -Xmx1G -Xms128m
    steps:
      - checkout
      - run: *import_gpg_key
      - generate-maven-settings-file:
          settings-file: *maven-settings-file
      - run: *release
  sonar:
    <<: *java-container-config
    steps:
      - checkout
      - generate-maven-settings-file:
          settings-file: *maven-settings-file
      - run: mvn verify
      - run: *sonar-scan

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - test:
          context: global
      - release:
          context: global
          requires:
            - test
          filters:
            branches:
              only: develop
  nightly-sonar-analysis:
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only: develop
    jobs:
      - sonar:
          context: global
